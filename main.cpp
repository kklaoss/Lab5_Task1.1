// Подключение заголовочного файла класса Man
#include "Man.h"
// Использование стандартного пространства имен
using namespace std;
// Имя файла с данными
const char filename[] = "dbase.txt";
int main()
{
    // Установка локали для поддержки кириллицы
    setlocale(LC_ALL, "ru");
    // Установка кодировки консоли для Windows
    system("chcp 1251");
    // Максимальное количество записей
    const int maxn_record = 10;
    // Массив объектов класса Man
    Man man[maxn_record];
    // Буфер для чтения строки из файла
    char buf[l_buf + 1];
    // Буфер для ввода фамилии пользователем
    char name[l_name + 1];
    // Открытие файла для чтения
    ifstream fin(filename);
    // Проверка, открыт ли файл
    if (!fin)
    {
        // Сообщение об ошибке
        cout << "Нет файла " << filename << endl;
        // Завершение программы с кодом ошибки
        return 1;
    }
    // Счетчик записей
    int i = 0;
    // Чтение строки из файла
    while (fin.getline(buf, l_buf))
    {
        // Проверка на превышение максимального количества записей
        if (i >= maxn_record)
        {
            // Сообщение об ошибке
            cout << "Слишком длинный файл";
            // Завершение программы с кодом ошибки
            return 1;
        }
        // Установка имени из буфера
        man[i].SetName(buf);
        // Установка года рождения из буфера
        man[i].SetBirthYear(buf);
        // Установка оклада из буфера
        man[i].SetPay(buf);
        // Увеличение счетчика записей
        i++;
    }
    // Количество записей и найденных сотрудников
    int n_record = i, n_man = 0;
    // Сумма окладов для расчета среднего
    float mean_pay = 0;
    // Бесконечный цикл для поиска сотрудников
    while (true)
    {
        // Приглашение к вводу
        cout << "Введите фамилию или слово end: ";
        // Чтение ввода пользователя
        cin >> name;
        // Проверка на завершение ввода
        if (0 == strcmp(name, "end"))
            break;
        // Флаг для проверки наличия сотрудника
        bool not_found = true;
        // Поиск по всем записям
        for (i = 0; i < n_record; ++i)
        {
            // Сравнение введенной фамилии с именем сотрудника
            if (man[i].CompareName(name))
            {
                // Вывод информации о сотруднике
                man[i].Print();
                // Увеличение счетчика найденных сотрудников
                n_man++;
                // Добавление оклада к сумме
                mean_pay += man[i].GetPay();
                // Сотрудник найден
                not_found = false;
                break;
            }
        }
        // Если сотрудник не найден
        if (not_found)
            cout << "Такого сотрудника нет" << endl;
    }
    // Вывод среднего оклада
    if (n_man) cout << "Средний оклад: " << mean_pay / n_man << endl;
    // Завершение программы
    return 0;
}